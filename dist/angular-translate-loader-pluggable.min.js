!function(e,t){if("function"==typeof define&&define.amd)define(["exports"],t);else if("undefined"!=typeof exports)t(exports);else{var n={exports:{}};t(n.exports),e.angularTranslateLoaderPluggable=n.exports}}(this,function(e){"use strict";function t(){var e=[],t={};this.useLoader=function(t,n){return e.push({name:t,options:n}),this},this.translations=function(e,n){return t[e]=angular.extend({},t[e],n),this},this.$get=["$q","$injector",function(n,r){return function(a){var o=n.defer(),s=[];s.push(function(){var e=n.defer();return e.resolve(t[a.key]),e.promise}());for(var u=0;u<e.length;u++){var i=e[u],l=r.get(i.name)(angular.extend(a,i.options));s.push(l)}return n.all(s).then(function(e){for(var t,n=0;n<e.length;n++)t=angular.extend({},t,e[n]);o.resolve(t)}),o.promise}}]}var n="angular-translate-loader-pluggable";angular.module(n,["pascalprecht.translate"]).provider("translatePluggableLoader",t),"undefined"!=typeof e&&module&&"object"==typeof module.exports&&(module.exports={name:n})});
//# sourceMappingURL=angular-translate-loader-pluggable.min.js.map
